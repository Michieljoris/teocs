start: production* startprod production*;
production: prodName ":" prodDescription;
prodDescription: list ";" ;
list: seq | alt;
seq: qelt*;
alt: qelt ("|" qelt )*;
qelt: elt reg?;
elt: lit | prodName | ("(" list ")");
reg: "*" | "?" | "+";
lit: stringConstant;
prodName: identifier;
startprod: "start" ":" prodDescription ;

//grammar can not be left recursive!!!, maybe do a check for it, not difficult
//undefined productions are types of tokens. So the tokenizer has to produce
//tokens having these types, for example stringConstant, integerConstant, identifier etc.



